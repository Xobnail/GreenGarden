// <auto-generated />
using GreenGarden.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GreenGarden.Database.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GreenGarden.Domain.Entities.Habitat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Habitats", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tropical Forest"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Temperate Climate"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Subtropics"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mountains"
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Plants", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Orchid"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cactus"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rose"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aloe Vera"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bamboo"
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.PlantHabitat", b =>
                {
                    b.Property<int>("HabitatId")
                        .HasColumnType("integer");

                    b.Property<int>("PlantId")
                        .HasColumnType("integer");

                    b.Property<byte>("Order")
                        .HasColumnType("smallint");

                    b.HasKey("HabitatId", "PlantId");

                    b.HasIndex("PlantId");

                    b.ToTable("PlantsHabitats", (string)null);

                    b.HasData(
                        new
                        {
                            HabitatId = 1,
                            PlantId = 1,
                            Order = (byte)1
                        },
                        new
                        {
                            HabitatId = 4,
                            PlantId = 1,
                            Order = (byte)2
                        },
                        new
                        {
                            HabitatId = 2,
                            PlantId = 2,
                            Order = (byte)1
                        },
                        new
                        {
                            HabitatId = 3,
                            PlantId = 3,
                            Order = (byte)1
                        },
                        new
                        {
                            HabitatId = 1,
                            PlantId = 4,
                            Order = (byte)1
                        },
                        new
                        {
                            HabitatId = 2,
                            PlantId = 4,
                            Order = (byte)2
                        },
                        new
                        {
                            HabitatId = 1,
                            PlantId = 5,
                            Order = (byte)1
                        },
                        new
                        {
                            HabitatId = 5,
                            PlantId = 5,
                            Order = (byte)2
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.PriceOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("NewPrice")
                        .HasColumnType("numeric");

                    b.Property<int>("PlantId")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId")
                        .IsUnique();

                    b.ToTable("PriceOffers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NewPrice = 29.99m,
                            PlantId = 1,
                            Text = "Special offer on orchids!"
                        },
                        new
                        {
                            Id = 2,
                            NewPrice = 19.99m,
                            PlantId = 2,
                            Text = "Discount on cacti this week"
                        },
                        new
                        {
                            Id = 3,
                            NewPrice = 15.99m,
                            PlantId = 3,
                            Text = "Roses at a special price"
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PlantId")
                        .HasColumnType("integer");

                    b.Property<int>("Stars")
                        .HasColumnType("integer");

                    b.Property<string>("VoterName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PlantId");

                    b.ToTable("Reviews", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Beautiful plant!",
                            PlantId = 1,
                            Stars = 5,
                            VoterName = "Ann"
                        },
                        new
                        {
                            Id = 2,
                            Comment = "I like it very much!",
                            PlantId = 1,
                            Stars = 4,
                            VoterName = "Ian"
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Not bad, but I expected more",
                            PlantId = 2,
                            Stars = 3,
                            VoterName = "Mary"
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Perfect for my garden",
                            PlantId = 3,
                            Stars = 5,
                            VoterName = "Alex"
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Withered quickly",
                            PlantId = 4,
                            Stars = 2,
                            VoterName = "Helen"
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tags", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Blooming"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Indoor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Garden"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Medicinal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Exotic"
                        });
                });

            modelBuilder.Entity("PlantTag", b =>
                {
                    b.Property<int>("PlantsId")
                        .HasColumnType("integer");

                    b.Property<int>("TagsId")
                        .HasColumnType("integer");

                    b.HasKey("PlantsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("PlantTag");

                    b.HasData(
                        new
                        {
                            PlantsId = 1,
                            TagsId = 1
                        },
                        new
                        {
                            PlantsId = 1,
                            TagsId = 2
                        },
                        new
                        {
                            PlantsId = 1,
                            TagsId = 5
                        },
                        new
                        {
                            PlantsId = 2,
                            TagsId = 2
                        },
                        new
                        {
                            PlantsId = 2,
                            TagsId = 5
                        },
                        new
                        {
                            PlantsId = 3,
                            TagsId = 1
                        },
                        new
                        {
                            PlantsId = 3,
                            TagsId = 3
                        },
                        new
                        {
                            PlantsId = 4,
                            TagsId = 2
                        },
                        new
                        {
                            PlantsId = 4,
                            TagsId = 4
                        },
                        new
                        {
                            PlantsId = 5,
                            TagsId = 3
                        },
                        new
                        {
                            PlantsId = 5,
                            TagsId = 5
                        });
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.PlantHabitat", b =>
                {
                    b.HasOne("GreenGarden.Domain.Entities.Habitat", "Habitat")
                        .WithMany("PlantLink")
                        .HasForeignKey("HabitatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenGarden.Domain.Entities.Plant", "Plant")
                        .WithMany("HabitatsLink")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Habitat");

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.PriceOffer", b =>
                {
                    b.HasOne("GreenGarden.Domain.Entities.Plant", "Plant")
                        .WithOne("Promotion")
                        .HasForeignKey("GreenGarden.Domain.Entities.PriceOffer", "PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Review", b =>
                {
                    b.HasOne("GreenGarden.Domain.Entities.Plant", "Plant")
                        .WithMany("Reviews")
                        .HasForeignKey("PlantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("PlantTag", b =>
                {
                    b.HasOne("GreenGarden.Domain.Entities.Plant", null)
                        .WithMany()
                        .HasForeignKey("PlantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GreenGarden.Domain.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Habitat", b =>
                {
                    b.Navigation("PlantLink");
                });

            modelBuilder.Entity("GreenGarden.Domain.Entities.Plant", b =>
                {
                    b.Navigation("HabitatsLink");

                    b.Navigation("Promotion")
                        .IsRequired();

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
